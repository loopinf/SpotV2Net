# data
volfile: 'processed_data/vols_mats_taq_standardized.h5' 
volvolfile: 'processed_data/volvols_mats_taq_standardized.h5' 
root: 'processed_data/vols_mats_taq_standardized_test' # this can be modified
fully_connected: True
split_proportion: 0.8 # to be modified
scale_up: null #1000000
threshold: 0.00001 #None

# Add these parameters
forecast_horizon: 12  # 12 5-minute intervals = 1 hour
lookback_window: 24   # Use 2 hours of data to forecast
model_name: SpotV2Net_1hour  # New model name

# test
model_to_load: '20240428_RGNN_std_optuna' #'20240526_RGNN_std_optuna' #'20240428_RGNN_std_optuna' #'20240428_RGNN_std_optuna' 
plot_losses: True
naive_benchmark: True
by_period: True
by_company: True

# model
seed: [5154]
modelname: '20240525_RGNN_std_optuna'
modeltype: 'gat' # gat or rnn
seq_length: 42 #42
batch_size: 128
dim_hidden_layers: [500]
output_node_channels: 1 #14
num_heads: 6
concat_heads: True
activation: 'relu'
optimizer: 'adam'
learning_rate: 0.001
negative_slope: 0.2
dropout_att: 0.0
dropout: 0.1
standardize: False
num_epochs: 3
tolerance: 1e-9
# optuna
n_trials: 50
random_sampler: False
hyperparameters:
  seq_length: [[60,72,84,96,108,120], 'cat']
  learning_rate: [[0.01,0.001, 0.0001, 0.005, 0.0005], 'cat']
  dim_hidden_layers: [[[50, 25, 12],
 [50, 50, 50],
 [100, 50, 25],
 [100, 100, 100],
 [200, 100, 50],
 [200, 200, 200],
 [300, 150, 75],
 [300, 300, 300],
 [400, 200, 100],
 [400, 400, 400],
 [500, 250, 125],
 [500, 500, 500],
 [600, 300, 150],
 [600, 600, 600],
[100, 50], [200, 50], [300, 50], [400, 50], [500, 50], [600, 50], [200, 100], [300, 100], [400, 100], [500, 100], [600, 100], [300, 200], [400, 200], [500, 200],
[600, 200], [400, 300], [500, 300], [600, 300], [500, 400], [600, 400], [600, 500]], 'cat']
  num_heads: [[2, 7], 'int']
  dropout: [[0.0, 0.7, 0.1], 'float']
  dropout_att: [[0.0, 0.7, 0.1], 'float']
  activation: [['relu', 'tanh', 'sigmoid'], 'cat']
  seed: [[1,10000], 'int']
  batch_size: [[128, 256, 512], 'cat']
  concat_heads: [[True, False], 'cat']
  standardize: [[True, False], 'cat']
  scale_up: [[10000, 100000], 'cat']
  negative_slope: [[0.05, 0.1, 0.2, 0.5, 0.6, 0.8], 'cat']

grid:
  - dim_hidden_layers
  - standardize
  - scale_up

